package com.example.day1_ai_chat_nextgen.domain.model

/**
 * Dual-agents system prompts and helpers.
 */
object AgentPrompts {
    const val HANDOFF_PREFIX: String = "HANDOFF_AGENT2"

    // Agent 1 ‚Äî Planner & Clarifier
    val AGENT_1_SYSTEM_PROMPT: String = (
        """
        Role: Planner & Clarifier.

        –û–±—â–∞–π—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, —É—Ç–æ—á–Ω–∏ –º–∏–Ω–∏–º—É–º –≤–æ–ø—Ä–æ—Å–æ–≤. –ö–æ–≥–¥–∞ —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ —Å–æ–±—Ä–∞–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ,
        —Å–¥–µ–ª–∞–π –æ–¥–∏–Ω —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤—Ç–æ—Ä–æ–º—É –∞–≥–µ–Ω—Ç—É.

        –§–æ—Ä–º–∞—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –†–û–í–ù–û —Ç–∞–∫–æ–π:
        1-—è —Å—Ç—Ä–æ–∫–∞: HANDOFF_AGENT2
        –°–æ 2-–π —Å—Ç—Ä–æ–∫–∏ –∏ –¥–∞–ª—å—à–µ: –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Å–≤—è–∑–Ω—ã–π —Ç–µ–∫—Å—Ç (–ª—é–±–æ–π —Ñ–æ—Ä–º–∞—Ç), –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.

        –í –ù–ï—Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –ù–ò–ö–û–ì–î–ê –Ω–µ –ø–∏—à–∏ HANDOFF_AGENT2.
        –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤/—Å—É—Ñ—Ñ–∏–∫—Å–æ–≤/–∫–æ–¥–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤ –≤–æ–∫—Ä—É–≥ –ø–æ–ª–µ–∑–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
        """
    ).trimIndent()

    // Agent 2 ‚Äî Clown Style Rewriter
    val AGENT_2_SYSTEM_PROMPT: String = (
        """
        Role: Clown Style Rewriter.

        –¢—ã –ø–æ–ª—É—á–∞–µ—à—å –ü–†–û–ò–ó–í–û–õ–¨–ù–´–ô —Ç–µ–∫—Å—Ç (–±–µ–∑ –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤).
        –ü–µ—Ä–µ–ø–∏—à–∏ –µ–≥–æ –≤ –∫–ª–æ—É–Ω—Å–∫–æ–º —Å—Ç–∏–ª–µ: –∏–≥—Ä–∏–≤–æ, —à—É–º–Ω–æ, —Å —É–º–µ—Å—Ç–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏ ü§°üé™üéà,
        –Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏ –∏—Å—Ö–æ–¥–Ω—ã–π —Å–º—ã—Å–ª –∏ –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã.
        –°—Ç—Ä—É–∫—Ç—É—Ä—É (–∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å–ø–∏—Å–∫–∏) –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–∏.
        –ï—Å–ª–∏ –±—ã–ª–∏ —à–∞–≥–∏/–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Äî –æ—Å—Ç–∞–≤—å –∏—Ö, –Ω–æ —Å–¥–µ–ª–∞–π —é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫—É—é –ø–æ–¥–∞—á—É.
        –ù–µ –¥–æ–±–∞–≤–ª—è–π –ª–∏—à–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è/–¥–∏—Å–∫–ª–µ–π–º–µ—Ä—ã.
        –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π).
        """
    ).trimIndent()

    /**
     * If the first line equals HANDOFF_AGENT2, return the remaining lines as payload; otherwise null.
     */
    fun extractPayloadForAgent2(agent1Reply: String): String? {
        val lines: List<String> = agent1Reply.trim().lines()
        if (lines.isEmpty()) return null
        if (lines.first().trim() != HANDOFF_PREFIX) return null
        return lines.drop(1).joinToString("\n").trim()
    }
}


